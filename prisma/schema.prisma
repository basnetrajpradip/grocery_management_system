datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Store {
  id                    String    @id @default(uuid())
  name                  String
  address               String
  products              Product[]
  users                 User[]
  sales                 Sale[]
  categories            Category[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Product {
  id                      String                  @id @default(uuid())
  name                    String
  priceInRs               Int 
  imagePath               String
  description             String
  isAvailableForPurchase  Boolean                 @default(true)
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  storeId                 String
  store                   Store                   @relation(fields: [storeId], references: [id], onDelete: Cascade)
  sales                   Sale[]
  categoryId              String
  category                Category                @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model User {
  id          String         @id @default(uuid())
  username    String
  imagePath   String
  email       String         @unique
  password    String
  accessGrant Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  role        Role           @default(USER)
  storeId     String
  store       Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
  sales       Sale[]
}

enum Role {
  ADMIN
  USER
}

model Sale {
  id            String        @id @default(uuid())
  priceSoldInRs Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  productId     String
  storeId       String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  product       Product       @relation(fields: [productId], references: [id], onDelete: Restrict)
  store         Store         @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

model Category {
  id          String       @id @default(uuid())
  name        String
  products    Product[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  storeId     String
  store       Store        @relation(fields: [storeId], references: [id], onDelete: Cascade)
}